import tornado.web, meta, auth
import xml.etree.ElementTree as ET
from db import Mysqldb
class UploadMemberHandler(tornado.web.RequestHandler):
    __metaclass__ = meta.HandlerMetaClass
    route = r'/upload'
    def post(self):
        dao = UploadDao()
        root = ET.fromstring(self.request.body)
        images = root.find('images').text
        uid = root.find('uid').text
        mes=dao.create_images(images,uid)
        self.write('images id = "%s"/>' % int(mes))
class UploadDao(object):
    def __init__(self):
        self.db =Mysqldb()
        self.__create_table(self.db)

    def __create_table(self, db):
        db.execute('''
            CREATE TABLE IF NOT EXISTS weicbd_account_images (
                id bigint NOT NULL AUTO_INCREMENT,
                images varchar(255) NOT NULL,
                imageid bigint NOT NULL,
                FOREIGN KEY (imageid) REFERENCES weicbd_account(id),
                PRIMARY KEY (id)
            ) DEFAULT CHARACTER SET=utf8;
        ''')
    def create_images(self, images, uid):
        images = self.db.execute('insert into weicbd_account_images(images,uid) values(%s,%s)',(images,uid))
        self.db.commit()
        return images